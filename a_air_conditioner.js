// В офисе, где работает программист Петр, установили кондиционер нового типа. 
// Этот кондиционер отличается особой простотой в управлении. У кондиционера есть всего лишь два 
// управляемых параметра: желаемая температура и режим работы.
// Кондиционер может работать в следующих четырех режимах:

// «freeze» — охлаждение. В этом режиме кондиционер может только уменьшать температуру.
// Если температура в комнате и так не больше желаемой, то он выключается.

// «heat» — нагрев. В этом режиме кондиционер может только увеличивать температуру. 
// Если температура в комнате и так не меньше желаемой, то он выключается.

// «auto» — автоматический режим. В этом режиме кондиционер может как увеличивать,
// так и уменьшать температуру в комнате до желаемой.

// «fan» — вентиляция. В этом режиме кондиционер осуществляет только вентиляцию воздуха и
// не изменяет температуру в комнате.

// Кондиционер достаточно мощный, поэтому при настройке на правильный режим работы он за
// час доводит температуру в комнате до желаемой.

// Требуется написать программу, которая по заданной температуре в комнате troom, 
// установленным на кондиционере желаемой температуре tcond и режиму работы определяет 
// температуру, которая установится в комнате через час.

// Формат ввода:
// Первая строка входного файла содержит два целых числа troom, и tcond, разделенных 
// ровно одним пробелом (–50 ≤ troom ≤ 50, –50 ≤ tcond ≤ 50).

// Вторая строка содержит одно слово, записанное строчными буквами латинского 
// алфавита — режим работы кондиционера.

// Формат вывода:
// Выходной файл должен содержать одно целое число — температуру, которая установится 
// в комнате через час.


const readline = require("readline");
const rl = readline.createInterface({
  input: process.stdin,
});

const solution = (data) => {
  const [troom, tcond] = data[0]
    .trim()
    .split(" ")
    .map((t) => +t);
  let mode = data[1];
  if (mode == "heat") return Math.max(troom, tcond);
  if (mode == "freeze") return Math.min(troom, tcond);
  if (mode == "auto") return tcond;
  if (mode == "fan") return troom;
  else return 'error'
};

const lines = [];
rl.on("line", (line) => {
  lines.push(line.trim());
  if (lines.length == 2) rl.close();
}).on("close", () => {
  const result = solution(lines);
  process.stdout.write(result + "");
});
